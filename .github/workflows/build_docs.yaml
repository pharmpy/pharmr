on: workflow_dispatch

name: Build docs

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout pharmr
        uses: actions/checkout@v3
        with:
          path: pharmr_repo

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        working-directory: pharmr_repo
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        working-directory: pharmr_repo
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install R dependencies
        working-directory: pharmr_repo
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_github('rstudio/reticulate')
        shell: Rscript {0}

      - name: Install pharmr
        working-directory: pharmr_repo
        run: |
          remotes::install_local(force=TRUE)
        shell: Rscript {0}

      - name: Checkout Pharmpy
        uses: actions/checkout@v3
        with:
          repository: pharmpy/pharmpy
          path: pharmpy_repo

      - name: Set up Pharmpy release version
        working-directory: pharmpy_repo
        run: |
          git fetch
          git checkout -b release_latest "$(git rev-list --tags --max-count=1)"
          echo "pharmpy_version=`git describe --tags`" >> $GITHUB_ENV 
          git branch -v

      - name: Install Pharmpy in venv
        working-directory: pharmpy_repo
        run: |
          python -m venv pharmpy_venv
          source pharmpy_venv/bin/activate
          pip install .

      - name: Test Pharmpy
        working-directory: pharmr_repo
        run: |
          reticulate::py_discover_config()
          reticulate::use_python('../pharmpy_repo/pharmpy_venv/bin')
          pharmr::print_pharmpy_version()
        shell: Rscript {0}

      - name: Install deploy dependencies
        run: |
          install.packages("devtools")
        shell: Rscript {0}
        
      - name: Update DESCRIPTION and documentation
        working-directory: pharmr_repo/deploy
        run: |
          reticulate::use_python('../../pharmpy_repo/pharmpy_venv/bin')

          pharmpy <- reticulate::import("pharmpy")
          pharmpy_version <- pharmpy$`__version__`
          desc::desc_set('Version', pharmpy_version)
          desc::desc_set('Date', Sys.Date())
          
          reticulate::py_run_file('build_functions.py')
          devtools::document()
        shell: Rscript {0}

      - name: Check
        run: |
          source pharmpy_repo/pharmpy_venv/bin/activate
          mkdir build
          R CMD build pharmr_repo
          R CMD install pharmr_*.*.*.tar.gz build
          R CMD check build/pharmr_*.*.*.tar.gz --no-manual

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: results-cran
          path: check

      - name: Set up git config
        working-directory: pharmr_repo
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add changes to DESCRIPTION and documentation
        working-directory: pharmr_repo
        run: |
          git add DESCRIPTION
          git add NAMESPACE
          git add R/functions_wrapper.R
          git add man/
          git status

      - name: Check if any files have been staged
        working-directory: pharmr_repo
        run: |
          if [[ "$(git diff --name-only --cached | wc -c)" != "0" ]]; then
            echo "has_been_updated=true" >> $GITHUB_ENV
          else
            echo "has_been_updated=false" >> $GITHUB_ENV
          fi

      - name: Commit and push changes, tag version
        if: ${{ env.has_been_updated == 'true' }}
        working-directory: pharmr_repo
        run: |
          echo "Committing changes"
          git commit -m "Update DESCRIPTION/documentation"
          echo "Tag version"
          git tag "${{ env.pharmpy_version }}"
          echo "Push changes"
          git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmr.git
          echo "push tags"
          git push --tags https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmr.git
        env:
          REPO_KEY: ${{secrets.ACCESS_TOKEN}}
          USERNAME: github-actions[bot]

