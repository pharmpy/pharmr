on:
  push:
    branches:
      - add-tags-at-release

name: Test venv install

jobs:
  setup_env:
    uses: ./.github/workflows/setup.yaml
    with:
      os: ubuntu-latest
      r-version: 'release'

  test_venv_install:
    needs: [setup_env]
    runs-on: ubuntu-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Pharmpy
        uses: actions/checkout@v3
        with:
          repository: pharmpy/pharmpy
          path: pharmpy_repo

      - name: Set up Pharmpy release version
        working-directory: pharmpy_repo
        run: |
          git fetch
          git checkout -b release_latest "$(git rev-list --tags --max-count=1)"
          echo "pharmpy_version=`git describe --tags`" >> $GITHUB_ENV 
          git branch -v

      - name: Test github env variable
        run: echo "${{ env.pharmpy_version }}"

      - name: Create venv
        working-directory: pharmpy_repo
        run: |
          python -m venv pharmpy_venv

      - name: Install Pharmpy in venv
        working-directory: pharmpy_repo
        run: |
          source pharmpy_venv/bin/activate
          pip install .

      - name: Test Pharmpy
        working-directory: pharmr_repo
        run: |
          reticulate::py_discover_config()
          reticulate::use_python('../pharmpy_repo/pharmpy_venv/bin')
          pharmr::print_pharmpy_version()
        shell: Rscript {0}

      - name: Install deploy dependencies
        run: |
          install.packages("here")
          install.packages("tidyverse")
          install.packages("devtools")
        shell: Rscript {0}

      - name: Check
        run: |
          source pharmpy_repo/pharmpy_venv/bin/activate
          mkdir build
          R CMD build pharmr_repo
          R CMD install pharmr_*.*.*.tar.gz build
          R CMD check build/pharmr_*.*.*.tar.gz --no-manual

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: results-cran
          path: check



